#!/usr/bin/env python
import os, re
import json 

# get some information about the test
modelname = raw_input("modelname=")
path = raw_input("path=")
directory = os.path.dirname(path)

# from here on out, we will be in the test's directory
here = os.getcwd()
os.chdir(directory)

#=========================================================
# now, we check that the
# 1. the pipeline api is able to create the test object
#==========================================================
title = "Templating on .{in,out} works correctly"
critical = True
passed = True
errors = []

def fail(reason):
    global errors, passed
    passed = False
    errors.append(reason)

import kimobjects
import template 
test = kimobjects.Test(modelname)
model = next(kimobjects.Model.all())
try:
    test.processed_infile(model)
except Exception as e:
    fail("pipeline.in could not be templated by Pipeline API: %r"% e)

os.chdir(here)
results = {
    "property-id": "tag:staff@noreply.openkim.org,2014-08-05:property/verification-check",
    "instance-id": 1,
    "passed": passed,
    "errors": errors,
    "critical": critical,
    "title": title
}

json.dump(
    [results], open("output/results.edn", "w"), 
    separators=(' ', ' '), indent=4
)
